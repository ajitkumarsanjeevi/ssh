name: Remote Deployment

on:
  push:
    branches:
      - main  

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.0'

      - name: fs
        run: |
        
         REGION="us-east-1"
         AZ="us-east-1a"
         FILE_SYSTEM_ID=$(aws efs describe-file-systems --region $REGION --query "FileSystems[?AvailabilityZoneName=='$AZ'].FileSystemId" --output text)



      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: init
        run: terraform init
      - name: plan
        run: terraform plan

      - name: apply
        run: terraform apply -auto-approve

      - name: destroy
        run: terraform destroy -auto-approve
        
      
      - name: ssh
        run: |
            mkdir -p ~/.ssh
            sudo echo "${{ secrets.ssh_key }}" > ~/.ssh/id_rsa 
            sudo chmod 600 ~/.ssh/id_rsa

      - name: SSH into the server and create a directory
        run: |
          
          set +e
          usernames=("ubuntu" "ec2-user" "admin")     

          ips=("54.80.40.16")
  
          for username in "${usernames[@]}"; do
 
          for ip in "${ips[@]}"; do
 

          ssh -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$username"@"$ip" "sudo chmod 777 /opt" 

          

          scp -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa file.sh  "$username"@"$ip":/opt 

         

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa "$username"@"$ip" "sudo bash /opt/file.sh"  
          

          done

          done

          
    
              
  

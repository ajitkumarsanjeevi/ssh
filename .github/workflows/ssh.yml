name: Remote Deployment          
 
on:
  push:     
    branches:  
      - main     
    
env:                         
  Region: ap-south-1  
jobs: 
  job1:  
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4   

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4  
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ env.Region }}

      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0 

      - name: init
        run: terraform init

      - name: plan
        run: terraform plan

      
      - name: terraform
        run: terraform destroy -auto-approve

      - name: ssh    
        run: |    

                mkdir -p ~/.ssh   
                echo "${{ secrets.splunk}}" > ~/.ssh/id_rsa 
                chmod 600 ~/.ssh/id_rsa 
    
      - name: ssh  
        run: | 


           set +e
           script="node_exporter.sh"
           usernames=("ubuntu" "ec2-user" "admin") 
           ips=($(aws ec2 describe-instances --region  ${{ env.Region }} --query "Reservations[].Instances[].[PublicIpAddress]" --output text))     
          
           for username in "${usernames[@]}"; do 
  
           for ip in "${ips[@]}"; do

           if [[ "$ip == "13.234.240.125" ]] || [ "$ip" == "13.201.230.209" ]]; then

           continue

           fi

           

           ssh -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$username"@"$ip" "sudo chmod 777 /opt"                
           scp -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$script"  "$username"@"$ip":/opt        
           ssh -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$username"@"$ip" "sudo bash /opt/$script" 

           

           

           done
           done 

           

           }

           
          

        continue-on-error: true 


      - name: ssh  
        run: | 


           set +e
           script="prometheus.sh"
           usernames=("ubuntu" "ec2-user" "admin") 
           ips=($(aws ec2 describe-instances --region  ${{ env.Region }} --query "Reservations[].Instances[].[PublicIpAddress]" --output text))     
          
           for username in "${usernames[@]}"; do
  
           for ip in "${ips[@]}"; do

           if [[ "$ip" == "13.201.230.209" ]]; then

           ssh -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$username"@"$ip" "sudo chmod 777 /opt"                
           scp -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$script"  "$username"@"$ip":/opt        
           ssh -o StrictHostKeyChecking=no -i  ~/.ssh/id_rsa "$username"@"$ip" "sudo bash /opt/$script" 

           break
           fi

           

           done
           done 

           }
           
        continue-on-error: true 

        

      - name: ansible
        run: |
           export ANSIBLE_HOST_KEY_CHEKING=False
           ansible-playbook -i hosts grafana.yml
           
           
                  
           

  
           
           
           
           
           

      

        
            
 
      
           
           
          

        
            

      
            
            
            
            

            
          


                                            
      
         

      
             

             
             
 

             
           
           

        
         
 
                          
                                     
                  
          
          
          


          


  
      


      

          
        
          
         
          
          

          

          
    
               
  

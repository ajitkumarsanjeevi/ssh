name: Remote Deployment

on:  
  push:    
    branches:
      - main  

env:
  Region: us-east-1
jobs:
  job1:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0 
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.Region }} 

      - name: init
        run: terraform init

      - name: plan
        run: terraform plan

      - name: apply
        run: terraform apply -auto-approve

      - name: destroy
        run: terraform destroy -auto-approve
        
       
          

      - name: ssh    
        run: |    
            mkdir -p ~/.ssh   
            echo "${{ secrets.ssh_key }}" > ~/.ssh/id_rsa 
            chmod 600 ~/.ssh/id_rsa    
                
    
      - name: script
        run: |
           set +e
          
          
            key_path="~/.ssh/id_rsa"
          
          
            function(){
            usernames=("ubuntu" "ec2-user" "admin")   
          
            ips=($(aws ec2 describe-instances --region ${{ env.Region }} --query "Reservations[].Instances[].[PublicIpAddress]" --output text))   
          
          
             for username in "${usernames[@]}"; do
 
             for ip in "${ips[@]}"; do
             
             ssh -o StrictHostKeyChecking=no -i  "$key_path" "$username"@"$ip" "sudo chmod 777 /opt/" &> /dev/null

             scp -o StrictHostKeyChecking=no -i  "$key_path"  "$1" "$username"@"$ip":/opt &> /dev/null
              
             ssh -o StrictHostKeyChecking=no -i  "$key_path" "$username"@"$ip" "sudo bash /opt/$1" &> /dev/null

             ssh -o StrictHostKeyChecking=no -i  "$key_path" "$username"@"$ip" "sudo ansible-playbook /opt/nginx.yml"

             done
             done

             }

             scripts=("awscli.sh" "jenkin.sh")
             for script in  "${scripts[@]}"; do
             function "$script"
             done
             
 

             
           
           

        
         
 
                          
                                     
                  
          
          
          


          


  
      


      

          
        
          
         
          
          

          

          
    
               
  
